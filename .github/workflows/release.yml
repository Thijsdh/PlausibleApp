name: Release
on:
  push:
    branches:
      - main
      - beta

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build-android:
    name: "Build Android APK"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Read package version
        run: |
          echo 'PACKAGE_JSON<<EOF' >> $GITHUB_ENV
          cat ./package.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Build Android
        env:
          VERSION_CODE: ${{ github.run_number }}
          VERSION_NAME: ${{ fromJson(env.PACKAGE_JSON).version }}.${{ github.run_number }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo ${{ secrets.KEYSTORE }} | base64 --decode > android/app/production.keystore
          cd android && ./gradlew -PversCode=$VERSION_CODE -PversName=$VERSION_NAME :app:assembleRelease

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-android
          path: android/app/build/outputs/apk/release/app-release.apk

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build-android
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: release-android
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Cache Node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release