name: Release
on:
  push:
    branches:
      - main
      - beta
  pull_request:
    branches: 
      - main
      - beta

jobs:
  detox:
    name: "Detox"
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [31]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: npm run test:e2e:android

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: detox-artifacts
          path: e2e/artifacts/
          fail-on-empty: false